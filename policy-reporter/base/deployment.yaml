---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-reporter
  namespace: policy-reporter
  labels:
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: policy-reporter
    app.kubernetes.io/version: "3.1.1"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/part-of: policy-reporter
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: policy-reporter
      app.kubernetes.io/instance: policy-reporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: policy-reporter
        app.kubernetes.io/instance: policy-reporter
        app.kubernetes.io/version: "3.1.1"
        app.kubernetes.io/part-of: policy-reporter
    spec:
      serviceAccountName: policy-reporter
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1234
      containers:
        - name: policy-reporter
          image: "ghcr.io/kyverno/policy-reporter:3.1.1"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            seccompProfile:
              type: RuntimeDefault
          args:
            - --port=8080
            - --config=/app/config.yaml
            - --dbfile=/sqlite/database.db
            - --metrics-enabled=true
            - --rest-enabled=true
            - --profile=false
            - --lease-name=policy-reporter
            - --template-dir=/app/templates
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          volumeMounts:
            - name: sqlite
              mountPath: /sqlite
            - name: config-file
              mountPath: /app/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: tmp
              mountPath: /tmp
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: sqlite
          emptyDir: {}
        - name: config-file
          configMap:
            name: policy-reporter-config
            optional: true
        - name: tmp
          emptyDir: {}
      volumeMounts:
        - name: config-file
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true         

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-reporter-kyverno-plugin
  namespace: policy-reporter
  labels:
    app.kubernetes.io/name: policy-reporter-kyverno-plugin
    app.kubernetes.io/instance: policy-reporter
    app.kubernetes.io/version: "3.1.1"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: policy-reporter-kyverno-plugin
      app.kubernetes.io/instance: policy-reporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: policy-reporter-kyverno-plugin
        app.kubernetes.io/instance: policy-reporter
        app.kubernetes.io/version: "3.1.1"
    spec:
      serviceAccountName: policy-reporter-kyverno-plugin
      automountServiceAccountToken: true
      securityContext:
        runAsGroup: 1234
        runAsUser: 1234
      containers:
        - name: policy-reporter-kyverno-plugin
          image: "ghcr.io/kyverno/policy-reporter/kyverno-plugin:0.4.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            seccompProfile:
              type: RuntimeDefault
          args:
            - run
            - --config=/app/config.yaml
            - --port=8080
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/policies
              port: http
          readinessProbe:
            httpGet:
              path: /v1/policies
              port: http
          volumeMounts:
            - name: config-file
              mountPath: /app/config.yaml
              subPath: config.yaml
              readOnly: true
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: config-file
          configMap:
            name: kyverno-plugin-config
            optional: true
      volumeMounts:
        - name: config-file
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true  